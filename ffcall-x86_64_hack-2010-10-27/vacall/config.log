This file contains any messages produced by compilers while
running configure, to aid debugging if configure makes a mistake.

It was created by libffcall/vacall configure 0x010B, which was
generated by GNU Autoconf 2.65.  Invocation command line was

  $ ./configure --disable-option-checking --prefix=/usr/local --build=x86_64-apple-darwin10.4.0 build_alias=x86_64-apple-darwin10.4.0 CC=/usr/bin/cc CFLAGS=-O3 -w -pipe --cache-file=/dev/null --srcdir=.

## --------- ##
## Platform. ##
## --------- ##

hostname = vinyl
uname -m = i386
uname -r = 10.4.0
uname -s = Darwin
uname -v = Darwin Kernel Version 10.4.0: Fri Apr 23 18:28:53 PDT 2010; root:xnu-1504.7.4~1/RELEASE_I386

/usr/bin/uname -p = i386
/bin/uname -X     = unknown

/bin/arch              = unknown
/usr/bin/arch -k       = unknown
/usr/convex/getsysinfo = unknown
/usr/bin/hostinfo      = Mach kernel version:
	 Darwin Kernel Version 10.4.0: Fri Apr 23 18:28:53 PDT 2010; root:xnu-1504.7.4~1/RELEASE_I386
Kernel configured for up to 4 processors.
2 processors are physically available.
4 processors are logically available.
Processor type: i486 (Intel 80486)
Processors active: 0 1 2 3
Primary memory available: 8.00 gigabytes
Default processor set: 166 tasks, 850 threads, 4 processors
Load average: 1.44, Mach factor: 2.56
/bin/machine           = unknown
/usr/bin/oslevel       = unknown
/bin/universe          = unknown

PATH: /usr/local/bin
PATH: /usr/local/bin
PATH: /usr/bin
PATH: /bin
PATH: /usr/sbin
PATH: /sbin
PATH: /usr/local/bin
PATH: /usr/X11/bin
PATH: /opt/local/bin
PATH: /Users/enki/Code/ec2-api-tools-1.3-30349/bin
PATH: /usr/local/sbin
PATH: /opt/local/bin
PATH: /Users/enki/Code/ec2-api-tools-1.3-30349/bin
PATH: /usr/local/sbin


## ----------- ##
## Core tests. ##
## ----------- ##

configure:1975: checking for gcc
configure:2002: result: /usr/bin/cc
configure:2231: checking for C compiler version
configure:2240: /usr/bin/cc --version >&5
i686-apple-darwin10-gcc-4.2.1 (GCC) 4.2.1 (Apple Inc. build 5664)
Copyright (C) 2007 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

configure:2251: $? = 0
configure:2240: /usr/bin/cc -v >&5
Using built-in specs.
Target: i686-apple-darwin10
Configured with: /var/tmp/gcc/gcc-5664~38/src/configure --disable-checking --enable-werror --prefix=/usr --mandir=/share/man --enable-languages=c,objc,c++,obj-c++ --program-transform-name=/^[cg][^.-]*$/s/$/-4.2/ --with-slibdir=/usr/lib --build=i686-apple-darwin10 --program-prefix=i686-apple-darwin10- --host=x86_64-apple-darwin10 --target=i686-apple-darwin10 --with-gxx-include-dir=/include/c++/4.2.1
Thread model: posix
gcc version 4.2.1 (Apple Inc. build 5664)
configure:2251: $? = 0
configure:2240: /usr/bin/cc -V >&5
gcc-4.2: argument to `-V' is missing
configure:2251: $? = 1
configure:2240: /usr/bin/cc -qversion >&5
i686-apple-darwin10-gcc-4.2.1: no input files
configure:2251: $? = 1
configure:2271: checking whether the C compiler works
configure:2293: /usr/bin/cc -O3 -w -pipe   conftest.c  >&5
configure:2297: $? = 0
configure:2346: result: yes
configure:2349: checking for C compiler default output file name
configure:2351: result: a.out
configure:2357: checking for suffix of executables
configure:2364: /usr/bin/cc -o conftest -O3 -w -pipe   conftest.c  >&5
configure:2368: $? = 0
configure:2390: result: 
configure:2412: checking whether we are cross compiling
configure:2420: /usr/bin/cc -o conftest -O3 -w -pipe   conftest.c  >&5
configure:2424: $? = 0
configure:2431: ./conftest
configure:2435: $? = 0
configure:2450: result: no
configure:2455: checking for suffix of object files
configure:2477: /usr/bin/cc -c -O3 -w -pipe  conftest.c >&5
configure:2481: $? = 0
configure:2502: result: o
configure:2506: checking whether we are using the GNU C compiler
configure:2525: /usr/bin/cc -c -O3 -w -pipe  conftest.c >&5
configure:2525: $? = 0
configure:2534: result: yes
configure:2543: checking whether /usr/bin/cc accepts -g
configure:2563: /usr/bin/cc -c -g  conftest.c >&5
configure:2563: $? = 0
configure:2604: result: yes
configure:2621: checking for /usr/bin/cc option to accept ISO C89
configure:2685: /usr/bin/cc  -c -O3 -w -pipe  conftest.c >&5
configure:2685: $? = 0
configure:2698: result: none needed
configure:2723: checking how to run the C preprocessor
configure:2754: /usr/bin/cc -E  conftest.c
configure:2754: $? = 0
configure:2768: /usr/bin/cc -E  conftest.c
conftest.c:9:28: error: ac_nonexistent.h: No such file or directory
configure:2768: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "libffcall/vacall"
| #define PACKAGE_TARNAME "libffcall-vacall"
| #define PACKAGE_VERSION "0x010B"
| #define PACKAGE_STRING "libffcall/vacall 0x010B"
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE_URL ""
| /* end confdefs.h.  */
| #include <ac_nonexistent.h>
configure:2793: result: /usr/bin/cc -E
configure:2813: /usr/bin/cc -E  conftest.c
configure:2813: $? = 0
configure:2827: /usr/bin/cc -E  conftest.c
conftest.c:9:28: error: ac_nonexistent.h: No such file or directory
configure:2827: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "libffcall/vacall"
| #define PACKAGE_TARNAME "libffcall-vacall"
| #define PACKAGE_VERSION "0x010B"
| #define PACKAGE_STRING "libffcall/vacall 0x010B"
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE_URL ""
| /* end confdefs.h.  */
| #include <ac_nonexistent.h>
configure:2857: checking for grep that handles long lines and -e
configure:2915: result: /usr/bin/grep
configure:2920: checking for egrep
configure:2982: result: /usr/bin/grep -E
configure:2988: checking whether /usr/bin/cc needs -traditional
conftest.c:9:20: error: termio.h: No such file or directory
configure:3022: result: no
configure:3030: checking whether using GNU C
configure:3053: result: yes
configure:3065: checking for underscore in external names
configure:3079: /usr/bin/cc -S conftest.c
configure:3082: $? = 0
configure:3092: result: yes
configure:3146: checking for ranlib
configure:3162: found /usr/bin/ranlib
configure:3173: result: ranlib
configure:3195: checking whether make sets $(MAKE)
configure:3217: result: yes
configure:3263: checking for a BSD-compatible install
configure:3331: result: /usr/bin/install -c
configure:3342: checking how to make hard links
configure:3358: result: ln
configure:3366: checking build system type
configure:3380: result: x86_64-apple-darwin10.4.0
configure:3400: checking host system type
configure:3413: result: x86_64-apple-darwin10.4.0
configure:3435: checking host CPU and C ABI
configure:3577: result: x86_64
configure:3593: checking for pcc non-reentrant struct return convention
configure:3704: /usr/bin/cc -o conftest -O3 -w -pipe -O0   conftest.c  >&5
configure:3704: $? = 0
configure:3704: ./conftest
configure:3704: $? = 1
configure: program exited with status 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "libffcall/vacall"
| #define PACKAGE_TARNAME "libffcall-vacall"
| #define PACKAGE_VERSION "0x010B"
| #define PACKAGE_STRING "libffcall/vacall 0x010B"
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE_URL ""
| #define ASM_UNDERSCORE /**/
| #ifndef __x86_64__
| #define __x86_64__ 1
| #endif
| /* end confdefs.h.  */
| 
| #include <stdlib.h>
| #if defined __MACH__ && defined __APPLE__
| /* Avoid a crash on MacOS X.  */
| #include <mach/mach.h>
| #include <mach/mach_error.h>
| #include <mach/thread_status.h>
| #include <mach/exception.h>
| #include <mach/task.h>
| #include <pthread.h>
| /* The exception port on which our thread listens.  */
| static mach_port_t our_exception_port;
| /* The main function of the thread listening for exceptions of type
|    EXC_BAD_ACCESS.  */
| static void *
| mach_exception_thread (void *arg)
| {
|   /* Buffer for a message to be received.  */
|   struct {
|     mach_msg_header_t head;
|     mach_msg_body_t msgh_body;
|     char data[1024];
|   } msg;
|   mach_msg_return_t retval;
|   /* Wait for a message on the exception port.  */
|   retval = mach_msg (&msg.head, MACH_RCV_MSG | MACH_RCV_LARGE, 0, sizeof (msg),
|                      our_exception_port, MACH_MSG_TIMEOUT_NONE, MACH_PORT_NULL);
|   if (retval != MACH_MSG_SUCCESS)
|     abort ();
|   exit (1);
| }
| static void
| nocrash_init (void)
| {
|   mach_port_t self = mach_task_self ();
|   /* Allocate a port on which the thread shall listen for exceptions.  */
|   if (mach_port_allocate (self, MACH_PORT_RIGHT_RECEIVE, &our_exception_port)
|       == KERN_SUCCESS) {
|     /* See http://web.mit.edu/darwin/src/modules/xnu/osfmk/man/mach_port_insert_right.html.  */
|     if (mach_port_insert_right (self, our_exception_port, our_exception_port,
|                                 MACH_MSG_TYPE_MAKE_SEND)
|         == KERN_SUCCESS) {
|       /* The exceptions we want to catch.  Only EXC_BAD_ACCESS is interesting
|          for us.  */
|       exception_mask_t mask = EXC_MASK_BAD_ACCESS;
|       /* Create the thread listening on the exception port.  */
|       pthread_attr_t attr;
|       pthread_t thread;
|       if (pthread_attr_init (&attr) == 0
|           && pthread_attr_setdetachstate (&attr, PTHREAD_CREATE_DETACHED) == 0
|           && pthread_create (&thread, &attr, mach_exception_thread, NULL) == 0) {
|         pthread_attr_destroy (&attr);
|         /* Replace the exception port info for these exceptions with our own.
|            Note that we replace the exception port for the entire task, not only
|            for a particular thread.  This has the effect that when our exception
|            port gets the message, the thread specific exception port has already
|            been asked, and we don't need to bother about it.
|            See http://web.mit.edu/darwin/src/modules/xnu/osfmk/man/task_set_exception_ports.html.  */
|         task_set_exception_ports (self, mask, our_exception_port,
|                                   EXCEPTION_DEFAULT, MACHINE_THREAD_STATE);
|       }
|     }
|   }
| }
| #else
| /* Avoid a crash on POSIX systems.  */
| #include <signal.h>
| /* A POSIX signal handler.  */
| static void
| exception_handler (int sig)
| {
|   exit (1);
| }
| static void
| nocrash_init (void)
| {
| #ifdef SIGSEGV
|   signal (SIGSEGV, exception_handler);
| #endif
| #ifdef SIGBUS
|   signal (SIGBUS, exception_handler);
| #endif
| }
| #endif
| 
| typedef struct { int a; int b; int c; int d; int e; } foo;
| foo foofun () { static foo foopi = {3141,5926,5358,9793,2385}; return foopi; }
| foo* (*fun) () = (foo* (*) ()) foofun;
| int main()
| { nocrash_init();
|  {foo foo1;
|   foo* fooptr1;
|   foo foo2;
|   foo* fooptr2;
|   foo1 = foofun(); fooptr1 = (*fun)(&foo1);
|   foo2 = foofun(); fooptr2 = (*fun)(&foo2);
|   return !(fooptr1 == fooptr2 && fooptr1->c == 5358);
| }}
configure:3716: result: no
configure:3725: checking whether small structs are returned in registers
configure:3830: /usr/bin/cc -o conftest -O3 -w -pipe   conftest.c  >&5
configure:3830: $? = 0
configure:3830: ./conftest
configure:3830: $? = 0
configure:3841: result: yes
configure:3850: checking whether floats are returned in integer registers
configure:3954: /usr/bin/cc -o conftest -O3 -w -pipe   conftest.c  >&5
conftest.c: In function 'main':
conftest.c:104: note: if this code is reached, the program will abort
configure:3954: $? = 0
configure:3954: ./conftest
./configure: line 1475: 96320 Illegal instruction     ./conftest$ac_exeext
configure:3954: $? = 132
configure: program exited with status 132
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "libffcall/vacall"
| #define PACKAGE_TARNAME "libffcall-vacall"
| #define PACKAGE_VERSION "0x010B"
| #define PACKAGE_STRING "libffcall/vacall 0x010B"
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE_URL ""
| #define ASM_UNDERSCORE /**/
| #ifndef __x86_64__
| #define __x86_64__ 1
| #endif
| #define __SMALL_STRUCT_RETURN__ /**/
| /* end confdefs.h.  */
| 
| #include <stdlib.h>
| #if defined __MACH__ && defined __APPLE__
| /* Avoid a crash on MacOS X.  */
| #include <mach/mach.h>
| #include <mach/mach_error.h>
| #include <mach/thread_status.h>
| #include <mach/exception.h>
| #include <mach/task.h>
| #include <pthread.h>
| /* The exception port on which our thread listens.  */
| static mach_port_t our_exception_port;
| /* The main function of the thread listening for exceptions of type
|    EXC_BAD_ACCESS.  */
| static void *
| mach_exception_thread (void *arg)
| {
|   /* Buffer for a message to be received.  */
|   struct {
|     mach_msg_header_t head;
|     mach_msg_body_t msgh_body;
|     char data[1024];
|   } msg;
|   mach_msg_return_t retval;
|   /* Wait for a message on the exception port.  */
|   retval = mach_msg (&msg.head, MACH_RCV_MSG | MACH_RCV_LARGE, 0, sizeof (msg),
|                      our_exception_port, MACH_MSG_TIMEOUT_NONE, MACH_PORT_NULL);
|   if (retval != MACH_MSG_SUCCESS)
|     abort ();
|   exit (1);
| }
| static void
| nocrash_init (void)
| {
|   mach_port_t self = mach_task_self ();
|   /* Allocate a port on which the thread shall listen for exceptions.  */
|   if (mach_port_allocate (self, MACH_PORT_RIGHT_RECEIVE, &our_exception_port)
|       == KERN_SUCCESS) {
|     /* See http://web.mit.edu/darwin/src/modules/xnu/osfmk/man/mach_port_insert_right.html.  */
|     if (mach_port_insert_right (self, our_exception_port, our_exception_port,
|                                 MACH_MSG_TYPE_MAKE_SEND)
|         == KERN_SUCCESS) {
|       /* The exceptions we want to catch.  Only EXC_BAD_ACCESS is interesting
|          for us.  */
|       exception_mask_t mask = EXC_MASK_BAD_ACCESS;
|       /* Create the thread listening on the exception port.  */
|       pthread_attr_t attr;
|       pthread_t thread;
|       if (pthread_attr_init (&attr) == 0
|           && pthread_attr_setdetachstate (&attr, PTHREAD_CREATE_DETACHED) == 0
|           && pthread_create (&thread, &attr, mach_exception_thread, NULL) == 0) {
|         pthread_attr_destroy (&attr);
|         /* Replace the exception port info for these exceptions with our own.
|            Note that we replace the exception port for the entire task, not only
|            for a particular thread.  This has the effect that when our exception
|            port gets the message, the thread specific exception port has already
|            been asked, and we don't need to bother about it.
|            See http://web.mit.edu/darwin/src/modules/xnu/osfmk/man/task_set_exception_ports.html.  */
|         task_set_exception_ports (self, mask, our_exception_port,
|                                   EXCEPTION_DEFAULT, MACHINE_THREAD_STATE);
|       }
|     }
|   }
| }
| #else
| /* Avoid a crash on POSIX systems.  */
| #include <signal.h>
| /* A POSIX signal handler.  */
| static void
| exception_handler (int sig)
| {
|   exit (1);
| }
| static void
| nocrash_init (void)
| {
| #ifdef SIGSEGV
|   signal (SIGSEGV, exception_handler);
| #endif
| #ifdef SIGBUS
|   signal (SIGBUS, exception_handler);
| #endif
| }
| #endif
| 
| float x = (float)1.2;
| float y = (float)1.3;
| float fun () { return x*y; }
| int main()
| { nocrash_init();
|  {int val = (* (int (*) ()) fun) ();
|   return !(val == 0x3FC7AE15 || val == 0x15AEC73F);
| }}
configure:3965: result: no
configure:3975: checking for long long int
configure:4012: /usr/bin/cc -o conftest -O3 -w -pipe   conftest.c  >&5
configure:4012: $? = 0
configure:4042: /usr/bin/cc -o conftest -O3 -w -pipe   conftest.c  >&5
configure:4042: $? = 0
configure:4042: ./conftest
configure:4042: $? = 0
configure:4057: result: yes
configure:4065: checking for ANSI C header files
configure:4085: /usr/bin/cc -c -O3 -w -pipe  conftest.c >&5
configure:4085: $? = 0
configure:4158: /usr/bin/cc -o conftest -O3 -w -pipe   conftest.c  >&5
configure:4158: $? = 0
configure:4158: ./conftest
configure:4158: $? = 0
configure:4169: result: yes
configure:4182: checking for sys/types.h
configure:4182: /usr/bin/cc -c -O3 -w -pipe  conftest.c >&5
configure:4182: $? = 0
configure:4182: result: yes
configure:4182: checking for sys/stat.h
configure:4182: /usr/bin/cc -c -O3 -w -pipe  conftest.c >&5
configure:4182: $? = 0
configure:4182: result: yes
configure:4182: checking for stdlib.h
configure:4182: /usr/bin/cc -c -O3 -w -pipe  conftest.c >&5
configure:4182: $? = 0
configure:4182: result: yes
configure:4182: checking for string.h
configure:4182: /usr/bin/cc -c -O3 -w -pipe  conftest.c >&5
configure:4182: $? = 0
configure:4182: result: yes
configure:4182: checking for memory.h
configure:4182: /usr/bin/cc -c -O3 -w -pipe  conftest.c >&5
configure:4182: $? = 0
configure:4182: result: yes
configure:4182: checking for strings.h
configure:4182: /usr/bin/cc -c -O3 -w -pipe  conftest.c >&5
configure:4182: $? = 0
configure:4182: result: yes
configure:4182: checking for inttypes.h
configure:4182: /usr/bin/cc -c -O3 -w -pipe  conftest.c >&5
configure:4182: $? = 0
configure:4182: result: yes
configure:4182: checking for stdint.h
configure:4182: /usr/bin/cc -c -O3 -w -pipe  conftest.c >&5
configure:4182: $? = 0
configure:4182: result: yes
configure:4182: checking for unistd.h
configure:4182: /usr/bin/cc -c -O3 -w -pipe  conftest.c >&5
configure:4182: $? = 0
configure:4182: result: yes
configure:4195: checking whether char is unsigned
configure:4213: /usr/bin/cc -c -O3 -w -pipe  conftest.c >&5
configure:4213: $? = 0
configure:4220: result: no
configure:4329: creating ./config.status

## ---------------------- ##
## Running config.status. ##
## ---------------------- ##

This file was extended by libffcall/vacall config.status 0x010B, which was
generated by GNU Autoconf 2.65.  Invocation command line was

  CONFIG_FILES    = 
  CONFIG_HEADERS  = 
  CONFIG_LINKS    = 
  CONFIG_COMMANDS = 
  $ ./config.status 

on vinyl

config.status:829: creating Makefile
config.status:829: creating config.h
config.status:995: config.h is unchanged
config.status:829: creating vacall.h

## ---------------- ##
## Cache variables. ##
## ---------------- ##

ac_cv_build=x86_64-apple-darwin10.4.0
ac_cv_c_char_unsigned=no
ac_cv_c_compiler_gnu=yes
ac_cv_env_CC_set=set
ac_cv_env_CC_value=/usr/bin/cc
ac_cv_env_CFLAGS_set=set
ac_cv_env_CFLAGS_value='-O3 -w -pipe'
ac_cv_env_CPPFLAGS_set=
ac_cv_env_CPPFLAGS_value=
ac_cv_env_CPP_set=
ac_cv_env_CPP_value=
ac_cv_env_LDFLAGS_set=
ac_cv_env_LDFLAGS_value=
ac_cv_env_LIBS_set=
ac_cv_env_LIBS_value=
ac_cv_env_build_alias_set=set
ac_cv_env_build_alias_value=x86_64-apple-darwin10.4.0
ac_cv_env_host_alias_set=
ac_cv_env_host_alias_value=
ac_cv_env_target_alias_set=
ac_cv_env_target_alias_value=
ac_cv_header_inttypes_h=yes
ac_cv_header_memory_h=yes
ac_cv_header_stdc=yes
ac_cv_header_stdint_h=yes
ac_cv_header_stdlib_h=yes
ac_cv_header_string_h=yes
ac_cv_header_strings_h=yes
ac_cv_header_sys_stat_h=yes
ac_cv_header_sys_types_h=yes
ac_cv_header_unistd_h=yes
ac_cv_host=x86_64-apple-darwin10.4.0
ac_cv_objext=o
ac_cv_path_EGREP='/usr/bin/grep -E'
ac_cv_path_GREP=/usr/bin/grep
ac_cv_path_install='/usr/bin/install -c'
ac_cv_prog_CPP='/usr/bin/cc -E'
ac_cv_prog_ac_ct_CC=/usr/bin/cc
ac_cv_prog_ac_ct_RANLIB=ranlib
ac_cv_prog_cc_c89=
ac_cv_prog_cc_g=yes
ac_cv_prog_gcc_traditional=no
ac_cv_prog_make_make_set=yes
ac_cv_type_long_long_int=yes
cl_cv_prog_LN=ln
cl_cv_prog_as_underscore=yes
cl_cv_prog_cc_gcc=yes
ffcall_cv_c_float_return_ireg=no
ffcall_cv_c_struct_return_small=yes
ffcall_cv_c_struct_return_static=no
gl_cv_host_cpu_c_abi=x86_64

## ----------------- ##
## Output variables. ##
## ----------------- ##

AS_UNDERSCORE='true'
CC='/usr/bin/cc'
CC_GCC='true'
CFLAGS='-O3 -w -pipe'
CPP='/usr/bin/cc -E'
CPPFLAGS=''
DEFS='-DHAVE_CONFIG_H'
ECHO_C=''
ECHO_N='-n'
ECHO_T=''
EGREP='/usr/bin/grep -E'
EXEEXT=''
GCC_X_NONE='-x none'
GREP='/usr/bin/grep'
HOST_CPU_C_ABI='x86_64'
INSTALL_DATA='${INSTALL} -m 644'
INSTALL_PROGRAM='${INSTALL}'
INSTALL_SCRIPT='${INSTALL}'
LDFLAGS=''
LIBOBJS=''
LIBS=''
LN='ln'
LTLIBOBJS=''
OBJEXT='o'
PACKAGE_BUGREPORT=''
PACKAGE_NAME='libffcall/vacall'
PACKAGE_STRING='libffcall/vacall 0x010B'
PACKAGE_TARNAME='libffcall-vacall'
PACKAGE_URL=''
PACKAGE_VERSION='0x010B'
PATH_SEPARATOR=':'
RANLIB='ranlib'
SET_MAKE=''
SHELL='/bin/sh'
ac_ct_CC='/usr/bin/cc'
bindir='${exec_prefix}/bin'
build='x86_64-apple-darwin10.4.0'
build_alias='x86_64-apple-darwin10.4.0'
build_cpu='x86_64'
build_os='darwin10.4.0'
build_vendor='apple'
datadir='${datarootdir}'
datarootdir='${prefix}/share'
docdir='${datarootdir}/doc/${PACKAGE_TARNAME}'
dvidir='${docdir}'
exec_prefix='${prefix}'
host='x86_64-apple-darwin10.4.0'
host_alias=''
host_cpu='x86_64'
host_os='darwin10.4.0'
host_vendor='apple'
htmldir='${docdir}'
includedir='${prefix}/include'
infodir='${datarootdir}/info'
libdir='${exec_prefix}/lib'
libexecdir='${exec_prefix}/libexec'
localedir='${datarootdir}/locale'
localstatedir='${prefix}/var'
mandir='${datarootdir}/man'
oldincludedir='/usr/include'
pdfdir='${docdir}'
prefix='/usr/local'
program_transform_name='s,x,x,'
psdir='${docdir}'
sbindir='${exec_prefix}/sbin'
sharedstatedir='${prefix}/com'
sysconfdir='${prefix}/etc'
target_alias=''

## ----------- ##
## confdefs.h. ##
## ----------- ##

/* confdefs.h */
#define PACKAGE_NAME "libffcall/vacall"
#define PACKAGE_TARNAME "libffcall-vacall"
#define PACKAGE_VERSION "0x010B"
#define PACKAGE_STRING "libffcall/vacall 0x010B"
#define PACKAGE_BUGREPORT ""
#define PACKAGE_URL ""
#define ASM_UNDERSCORE /**/
#ifndef __x86_64__
#define __x86_64__ 1
#endif
#define __SMALL_STRUCT_RETURN__ /**/
#define HAVE_LONG_LONG_INT 1
#define STDC_HEADERS 1
#define HAVE_SYS_TYPES_H 1
#define HAVE_SYS_STAT_H 1
#define HAVE_STDLIB_H 1
#define HAVE_STRING_H 1
#define HAVE_MEMORY_H 1
#define HAVE_STRINGS_H 1
#define HAVE_INTTYPES_H 1
#define HAVE_STDINT_H 1
#define HAVE_UNISTD_H 1

configure: exit 0
